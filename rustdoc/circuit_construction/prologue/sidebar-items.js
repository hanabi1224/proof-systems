initSidebarItems({"fn":[["fp_constants",""],["fq_constants",""],["generate_prover_index",""],["prove","Given an index, a group map, custom blinders for the witness, a public input vector, and a circuit `main`, create a proof."],["verify","Verify a proof [ProverProof] using a [VerifierIndex] and a `group_map`."]],"struct":[["Arc","A thread-safe reference-counting pointer. ‘Arc’ stands for ‘Atomically Reference Counted’."],["ArithmeticSponge",""],["Constants",""],["DefaultFqSponge",""],["DefaultFrSponge",""],["FpInner",""],["PlonkSpongeConstantsKimchi",""],["PlonkSpongeConstantsLegacy",""],["Radix2EvaluationDomain","Defines a domain over which finite field (I)FFTs can be performed. Works only for fields that have a large multiplicative subgroup of size that is a power-of-2."],["SRS",""],["Var",""],["VestaParameters",""]],"trait":[["AffineCurve","Affine representation of an elliptic curve point guaranteed to be in the correct prime order subgroup."],["CommitmentCurve",""],["CoordinateCurve",""],["Cs",""],["EvaluationDomain","Defines a domain over which finite field (I)FFTs can be performed. The size of the supported FFT depends on the size of the multiplicative subgroup. For efficiency, we recommend that the field has at least one large subgroup generated by a root of unity."],["FftField","The interface for fields that are able to be used in FFTs."],["GroupMap",""],["PrimeField","The interface for a prime field."],["ProjectiveCurve","Projective representation of an elliptic curve point guaranteed to be in the correct prime order subgroup."],["Sponge","Cryptographic sponge interface - for hashing an arbitrary amount of data into one or more field elements"],["SpongeConstants",""],["UniformRand",""]],"type":[["Fp",""],["PallasAffine",""],["VestaAffine",""]]});